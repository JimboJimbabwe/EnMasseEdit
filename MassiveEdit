import os
import shutil


def copy_folder(source_folder, destination_folder):
    try:
        shutil.copytree(source_folder, destination_folder)
        print(f'Folder copied from {source_folder} to {destination_folder}')
    except FileExistsError:
        choice = input(f'Folder already exists at {destination_folder}. Do you want to update it? (yes/no): ')
        if choice.lower() == 'yes':
            shutil.rmtree(destination_folder)
            shutil.copytree(source_folder, destination_folder)
            print(f'Folder updated at {destination_folder}')
        else:
            print('Operation canceled.')


def update_file_line(file_path, line_number, new_line):
    try:
        with open(file_path, 'r') as file:
            lines = file.readlines()

        if line_number <= len(lines):
            lines[line_number - 1] = new_line + '\n'

        with open(file_path, 'w') as file:
            file.writelines(lines)

        print(f'Updated line {line_number} in {file_path}')
    except Exception as e:
        print(f'Error updating line {line_number}: {str(e)}')


def main():
    source_folder = input('Enter the path of the folder you want to copy: ')
    destination_folder = input('Enter the destination folder: ')

    copy_folder(source_folder, destination_folder)

    naming_convention = input('Enter the naming convention (e.g., CLIApp, Logic, etc.): ')
    file_extension = input('Enter the file extension (e.g., .jsx, .css, etc.): ')

    while True:
        line_number = int(input('Enter the line number to update (or -1 to stop): '))
        if line_number == -1:
            break
        new_line = input('Enter the new line: ')

        # Traverse subdirectories within the destination folder
        for root, dirs, files in os.walk(destination_folder):
            for dir_name in dirs:
                tool_name = dir_name.capitalize()  # Capitalize the folder name
                file_name = f'{tool_name}{naming_convention}{file_extension}'  # Generate the file name

                tool_folder = os.path.join(root, dir_name)
                file_path = os.path.join(tool_folder, file_name)

                update_file_line(file_path, line_number, new_line)


if __name__ == "__main__":
    main()
